use std::collections::HashMap;
macro_rules! opcodes {
    ($($name: ident,$bytes: expr,$sname: expr),*) => {

        $(
            #[allow(non_upper_case_globals)]
            pub const $name: &'static [u8] = &$bytes;
        )*

        lazy_static::lazy_static! {
            pub static ref OPCODE_TABLE: HashMap<Vec<u8>,String> = {
                let mut map = HashMap::new();
                $(
                    map.insert($bytes.iter().map(|b| *b).collect::<Vec<u8>>(), $sname.to_string());
                )*
                map
            };

            pub static ref OPCODE_TO_BYTES: HashMap<String,Vec<u8>> = {
                let mut map = HashMap::new();
                $(
                    map.insert($sname.to_string(), $bytes.iter().map(|b| *b).collect::<Vec<u8>>());
                )*

                map
            };
        }
    };
}

opcodes! {
    add,[0x58],"add",
    add_ovf,[0xd6],"add.ovf",
    add_ovf_un,[0xd7],"add.ovf.un",
    and,[0x5f],"and",
    arglist,[0xfe,0x00],"arglist",
    beq,[0x3b],"beq",
    beq_s,[0x2e],"beq.s",
    bge,[0x3c],"bge",
    bge_s,[0xf2],"bge.s",
    bge_un,[0x41],"bge.un",
    bge_un_s,[0x34],"bge.un.s",
    bgt,[0x3d],"bgt",
    bgt_s,[0x30],"bgt.s",
    bgt_un,[0x42],"bgt.un",
    bgt_un_s,[0x35],"bgt.un.s",
    ble,[0x3e],"ble",
    ble_s,[0x31],"ble.s",
    ble_un,[0x43],"ble.un",
    ble_un_s,[0x36],"ble.un.s",
    blt,[0x3f],"blt",
    blt_s,[0x32],"blt.s",
    blt_un,[0x44],"blt.un",
    blt_un_s,[0x37],"blt.un.s",
    bne_un,[0x40],"bne.un",
    bne_un_s,[0x33],"bne.un.s",
    box_,[0x8c],"box",
    br,[0x38],"br",
    br_s,[0x2b],"bs.s",
    break_,[0x01],"break",
    brfalse,[0x39],"brfalse",
    brfalse_s,[0x2c],"brfalse.s",
    brinst,[0x3a],"brinst",
    brinst_s,[0x2d],"brinst.s",
    brnull,[0x39],"brnull",
    brnull_s,[0x2c],"brnull.s",
    brtrue,[0x3a],"brtrue",
    brtrue_s,[0x2d],"brtrue.s",
    brzero,[0x39],"brzero",
    brzero_s,[0x2c],"brzero.s",
    call,[0x28],"call",
    calli,[0x29],"calli",
    callvirt,[0x6f],"callvirt",
    castclass,[0x74],"castclass",
    ceq,[0xfe,0x01],"ceq",
    cgt,[0xfe,0x02],"cgt",
    cgt_un,[0xfe,0x03],"cgt.un",
    ckfinite,[0xc3],"ckfinite",
    clt,[0xfe,0x04],"clt",
    clt_un,[0xfe,0x05],"clt.un",
    constrained,[0xfe,0x16],"constrained",
    conv_i,[0xd3],"conv.i",
    conv_i1,[0x67],"conv.i1",
    conv_i2,[0x68],"conv.i2",
    conv_i4,[0x69],"conv.i4",
    conv_i8,[0x6a],"conv.i8",
    conv_ovf_i,[0xd4],"conv.ovf.i",
    conv_ovf_i_un,[0x8a],"conv.ovf.i.un",
    conv_ovf_i1,[0xb3],"conv.ovf.i1",
    conv_ovf_i1_un,[0x82],"conv.ovf.i1.un",
    conv_ovf_i2,[0xb5],"conv.ovf.i2",
    conv_ovf_i2_un,[0x83],"conv.ovf.i2.un",
    conv_ovf_i4,[0xb7],"conv.ovf.i4",
    conv_ovf_i4_un,[0x84],"conv.ovf.i4.un",
    conv_ovf_i8,[0xb9],"conv.ovf.i8",
    conv_ovf_i8_un,[0x85],"convf.ovf.i8.un",
    conv_ovf_u,[0xd5],"convf.ovf.u",
    conv_ovf_u_un,[0x8b],"conv.ovf.u.un",
    conv_ovf_u1,[0xb4],"conv.ovf.u1",
    conv_ovf_u1_un,[0x86],"conv.ovf.u1.un",
    conv_ovf_u2,[0xb6],"conv.ovf.u2",
    conv_ovf_u2_un,[0x87],"conv.ovf.u2.un",
    conv_ovf_u4,[0xb8],"conv.ovf.u4",
    conv_ovf_u4_un,[0x88],"convf.ovf.u4.un",
    conv_ovf_u8,[0xba],"conv.ovf.u8",
    conv_ovf_u8_un,[0x89],"conv.ovf.u8.un",
    conv_r_un,[0x76],"conv.r.un",
    conv_r4,[0x6b],"conv.r4",
    conv_r8,[0x6c],"conv.r8",
    conv_u,[0xe0],"conv.u",
    conv_u1,[0xd2],"conv.u1",
    conv_u2,[0xd1],"conv.u2",
    conv_u4,[0x6d],"conv.u4",
    conv_u8,[0x6e],"conv.u8",
    cpblk,[0xfe,0x17],"cpblk",
    cpobj,[0x70],"cpobj",
    div,[0x5b],"div",
    div_un,[0x5c],"div.un",
    dup,[0x25],"dup",
    endfault,[0xdc],"endfault",
    endfilter,[0xfe,0x11],"endfilter",
    endfinally,[0xdc],"endfinally",
    initblk,[0xfe,0x18],"initblk",
    initobj,[0xfe,0x15],"initobj",
    isint,[0x75],"isinst",
    jmp,[0x27],"jmp",
    ldarg,[0xfe,0x09],"ldarg",
    ldarg_0,[0x02],"ldarg.0",
    ldarg_1,[0x03],"ldarg.1",
    ldarg_2,[0x04],"ldarg.2",
    ldarg_3,[0x05],"ldarg.3",
    ldarg_s,[0x0e],"ldarg.s",
    ldarga,[0xfe,0x0a],"ldarga",
    ldarga_s,[0x0f],"ldarga.s",
    ldc_i4,[0x20],"ldc.i4",
    ldc_i4_0,[0x16],"ldc.i4.0",
    ldc_i4_1,[0x17],"ldc.i4.1",
    ldc_i4_2,[0x18],"ldc.i4.2",
    ldc_i4_3,[0x19],"ldc.i4.3",
    ldc_i4_4,[0x1a],"ldc.i4.4",
    ldc_i4_5,[0x1b],"ldc.i4.5",
    ldc_i4_6,[0x1c],"ldc.i4.6",
    ldc_i4_7,[0x1d],"ldc.i4.7",
    ldc_i4_8,[0x1e],"ldc.i4.8",
    ldc_i4_m1,[0x15],"ldc.i4.m1",
    ldc_i4_s,[0x1f],"ldc.i4.s",
    ldc_i8,[0x21],"ldc.i8",
    ldc_r4,[0x22],"ldc.r4",
    ldc_r8,[0x23],"ldc.r8",
    ldelem,[0xa3],"ldelem",
    ldelem_i,[0x97],"ldelem.i",
    ldelem_i1,[0x90],"ldelem.i1",
    ldelem_i2,[0x92],"ldelem.i2",
    ldelem_i4,[0x94],"ldelem.i4",
    ldelem_i8,[0x96],"ldelem.i8",
    ldelem_r4,[0x98],"ldelem.r4",
    ldelem_r8,[0x99],"ldelem.r8",
    ldelem_ref,[0x9a],"ldelem.ref",
    ldelem_u1,[0x91],"ldelem.u1",
    ldelem_u2,[0x93],"ldelem.u2",
    ldelem_u4,[0x95],"ldelem.u4",
    ldelem_u8,[0x96],"ldelem.u8",
    ldelema,[0x8f],"ldelema",
    ldfld,[0x7b],"ldfld",
    ldflda,[0x7c],"ldflda",
    ldftn,[0xfe,0x06],"ldftn",
    ldind_i,[0x4d],"ldind.i",
    ldind_i1,[0x46],"ldind.i1",
    ldind_i2,[0x48],"ldind.i2",
    ldind_i4,[0x4a],"ldind.i4",
    ldind_i8,[0x4c],"ldind.i8",
    ldind_r4,[0x4e],"ldind.r4",
    ldind_r8,[0x4f],"ldind.r8",
    ldind_ref,[0x50],"ldind.ref",
    ldind_u1,[0x47],"ldind.u1",
    ldind_u2,[0x49],"ldind.u2",
    ldind_u4,[0x4b],"ldind.u4",
    ldind_u8,[0x4c],"ldind.i8",
    ldlen,[0x8e],"ldlen",
    ldloc_0,[0x06],"ldloc.0",
    ldloc_1,[0x07],"ldloc.1",
    ldloc_2,[0x08],"ldloc.2",
    ldloc_3,[0x09],"ldloc.3",
    ldloc_s,[0x11],"ldloc.s",
    ldloca,[0xfe,0x0d],"ldloca",
    ldloca_s,[0x12],"ldloca.s",
    ldnull,[0x14],"ldnull",
    ldobj,[0x71],"ldobj",
    ldsfld,[0x7e],"ldsfld",
    ldsflda,[0x7f],"ldsflda",
    ldstr,[0x72],"ldstr",
    ldtoken,[0xd0],"ldtoken",
    ldvirtfn,[0xfe,0x07],"ldvirtfn",
    leave,[0xdd],"leave",
    leave_s,[0xde],"leave.s",
    localloc,[0xfe,0x0f],"localloc",
    mkrefany,[0xc6],"mkrefany",
    mul,[0x5a],"mul",
    mul_ovf,[0xd8],"mul.ovf",
    mul_ovf_un,[0xd9],"mul.ovf.un",
    neg,[0x65],"neg",
    newarr,[0x8d],"newarr",
    newobj,[0x73],"newobj",
    no_,[0xfe,0x19],"no. {typecheck,rangecheck,nullcheck}",
    nop,[0x00],"nop",
    not,[0x66],"not",
    or,[0x60],"or",
    pop,[0x26],"pop",
    readonly,[0xfe,0x1e],"readonly",
    refanytype,[0xfe,0x1d],"refanytype",
    refanyval,[0xc2],"refanyval",
    rem,[0x5d],"rem",
    rem_un,[0x5e],"rem.un",
    ret,[0x2a],"ret",
    rethrow,[0xfe,0x1a],"rethrow",
    shl,[0x62],"shl",
    shr,[0x63],"shr",
    shr_un,[0x64],"shr.un",
    sizeof,[0xfe,0x1c],"sizeof",
    starg,[0xfe,0x0b],"starg",
    starg_s,[0x10],"starg.s",
    stelem,[0xa4],"stelem",
    stelem_i,[0x9b],"stelem.i",
    stelem_i1,[0x9c],"stelem.i1",
    stelem_i2,[0x9d],"stelem.i2",
    stelem_i4,[0x9e],"stelem.i4",
    stelem_i8,[0x9f],"stelem.i8",
    stelem_r4,[0xa0],"stelem.r4",
    stelem_r8,[0xa1],"stelem.r8",
    stelem_ref,[0xa2],"stelem.ref",
    stfld,[0x7d],"stfld",
    stind_i,[0xdf],"stind.i",
    stind_i1,[0x52],"stind.i1",
    stind_i2,[0x53],"stind.i2",
    stind_i4,[0x54],"stind.i4",
    stind_i8,[0x55],"stind.i8",
    stind_r4,[0x56],"stind.r4",
    stind_r8,[0x57],"stind.r8",
    stind_ref,[0x51],"stind.ref",
    stloc,[0xfe,0x0e],"stloc",
    stloc_0,[0x0a],"stloc.0",
    stloc_1,[0x0b],"stloc.1",
    stloc_2,[0x0c],"stloc.2",
    stloc_3,[0x0d],"stloc.3",
    stloc_s,[0x13],"stloc.s",
    stobj,[0x81],"stobj",
    stsfld,[0x80],"stsfld",
    sub,[0x59],"sub",
    sub_ovf,[0xda],"sub.ovf",
    sub_ovf_un,[0xdb],"sub.ovf.un",
    switch,[0x45],"switch",
    tailcall,[0xfe,0x14],"tail",
    throw,[0x7a],"throw",
    unaligned,[0xfe,0x12],"unaligned",
    unbox,[0x79],"unbox",
    unbox_any,[0xa5],"unbox.any",
    volatile,[0xfe,0x13],"volatile",
    xor,[0x61],"xor"

}
